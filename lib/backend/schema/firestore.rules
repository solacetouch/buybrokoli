rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{document} {
      allow create: if true;
      allow read: if true;
      allow write: if request.auth.uid == document;
      allow delete: if false;
    }

    match /vendorRatings/{document} {
      allow create: if true;
      allow read: if true;
      allow write: if resource.data.user == /databases/$(database)/documents/users/$(request.auth.uid);
      allow delete: if resource.data.user == /databases/$(database)/documents/users/$(request.auth.uid);
    }

    match /events/{document} {
      allow create: if false;
      allow read: if true;
      allow write: if true;
      allow delete: if false;
    }

    match /news/{document} {
      allow create: if false;
      allow read: if true;
      allow write: if false;
      allow delete: if request.auth != null;
    }

    match /vendorSubmissions/{document} {
      allow create: if request.auth != null;
      allow read: if request.auth != null;
      allow write: if request.auth != null;
      allow delete: if false;
    }

    match /eventSuggestions/{document} {
      allow create: if true;
      allow read: if true;
      allow write: if false;
      allow delete: if false;
    }

    match /chats/{document} {
      allow create: if /databases/$(database)/documents/users/$(request.auth.uid) in request.resource.data.users;
      allow read: if /databases/$(database)/documents/users/$(request.auth.uid) in resource.data.users;
      allow write: if /databases/$(database)/documents/users/$(request.auth.uid) in resource.data.users;
      allow delete: if false;
    }

    match /chat_messages/{document} {
      allow create: if /databases/$(database)/documents/users/$(request.auth.uid) in get(request.resource.data.chat).data.users
&& /databases/$(database)/documents/users/$(request.auth.uid) == request.resource.data.user;
      allow read: if /databases/$(database)/documents/users/$(request.auth.uid) in get(resource.data.chat).data.users;
      allow write: if false;
      allow delete: if false;
    }

    match /products/{document} {
      allow create: if request.resource.data.owner == /databases/$(database)/documents/users/$(request.auth.uid);
      allow read: if true;
      allow write: if resource.data.owner == /databases/$(database)/documents/users/$(request.auth.uid);
      allow delete: if resource.data.owner == /databases/$(database)/documents/users/$(request.auth.uid);
    }

    match /businesses/{document} {
      allow create: if true;
      allow read: if true;
      allow write: if true;
      allow delete: if resource.data.owner == /databases/$(database)/documents/users/$(request.auth.uid);
    }

    match /places/{document} {
      allow create: if request.resource.data.owner == /databases/$(database)/documents/users/$(request.auth.uid);
      allow read: if true;
      allow write: if resource.data.owner == /databases/$(database)/documents/users/$(request.auth.uid);
      allow delete: if resource.data.owner == /databases/$(database)/documents/users/$(request.auth.uid);
    }

    match /productRatings/{document} {
      allow create: if true;
      allow read: if true;
      allow write: if resource.data.user == /databases/$(database)/documents/users/$(request.auth.uid);
      allow delete: if resource.data.user == /databases/$(database)/documents/users/$(request.auth.uid);
    }

    match /reports/{document} {
      allow create: if request.auth != null;
      allow read: if request.auth != null;
      allow write: if false;
      allow delete: if false;
    }

    match /Legalization/{document} {
      allow create: if true;
      allow read: if true;
      allow write: if false;
      allow delete: if false;
    }

    match /Ads/{document} {
      allow create: if request.auth != null;
      allow read: if true;
      allow write: if request.auth != null;
      allow delete: if false;
    }

    match /Promos/{document} {
      allow create: if request.auth != null;
      allow read: if true;
      allow write: if resource.data.owner == /databases/$(database)/documents/users/$(request.auth.uid);
      allow delete: if resource.data.owner == /databases/$(database)/documents/users/$(request.auth.uid);
    }

    match /Feed/{document} {
      allow create: if request.resource.data.owner == /databases/$(database)/documents/users/$(request.auth.uid);
      allow read: if true;
      allow write: if request.auth != null;
      allow delete: if resource.data.owner == /databases/$(database)/documents/users/$(request.auth.uid);
    }

    match /Services/{document} {
      allow create: if request.resource.data.owner == /databases/$(database)/documents/users/$(request.auth.uid);
      allow read: if true;
      allow write: if resource.data.owner == /databases/$(database)/documents/users/$(request.auth.uid);
      allow delete: if resource.data.owner == /databases/$(database)/documents/users/$(request.auth.uid);
    }

    match /places/{parent}/hours/{document} {
      allow create: if request.auth != null;
      allow read: if true;
      allow write: if get(/databases/$(database)/documents/places/$(parent)).data.owner == /databases/$(database)/documents/users/$(request.auth.uid);
      allow delete: if get(/databases/$(database)/documents/places/$(parent)).data.owner == /databases/$(database)/documents/users/$(request.auth.uid);
    }

    match /{path=**}/hours/{document} {
      allow read: if true;
    }


    match /Purchases/{document} {
      allow create: if request.auth.uid == request.resource.data.uid;
      allow read: if request.auth != null;
      allow write: if false;
      allow delete: if false;
    }
  }
}
